name: Deploy

on:
  workflow_call:
    inputs:
      deployment: 
        description: Deployment type (staging or production)
        required: true
        type: string

  workflow_dispatch:
    inputs:
      deployment: 
        description: Deployment type
        type: choice
        options:
          - production
          - staging
        default: production

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      contents: read # Needed to clone the repository

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.1

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.26.2 # @denopendabot denoland/deno
      
      - name: Install deployctl
        run: >
          deno install --allow-read --allow-write --allow-env --allow-net --allow-run
          --no-check -r -f https://deno.land/x/deploy/deployctl.ts

      - name: Upload to Deno Deploy
        id: deploy
        run: >
          deployctl deploy --project=denopendabot --token ${{ secrets.DENO_DEPLOY_TOKEN }}
          ${{ inputs.deployment == 'production' && '--prod' || '' }} ./app.ts

      - name: Set deployment ID on Upstash
        run: >
          curl -X POST -d '${{ steps.deploy.outputs.deployment-id }}'
          ${{ secrets.UPSTASH_REDIS_REST_URL }}/set/${{ inputs.deployment }}-id
          -H "Authorization: Bearer ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}"

      - name: Set deployment URL on Upstash
        run: >
          curl -X POST -d '${{ steps.deploy.outputs.url }}'
          ${{ secrets.UPSTASH_REDIS_REST_URL }}/set/${{ inputs.deployment }}-url
          -H "Authorization: Bearer ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}"
